% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pam.surverg_restricted.R
\name{pam.surverg_restricted}
\alias{pam.surverg_restricted}
\title{Prediction Accuracy Measures for Parametric Survival Regression Models}
\usage{
pam.surverg_restricted(model, covs, tau = NULL, new_data = NULL, predict = T)
}
\arguments{
\item{model}{An object of class survreg representing a fitted parametric survival regression model. The survreg call must include x = TRUE and y = TRUE to ensure the design matrix and response vector are stored in the model object.}

\item{covs}{A vector of covariate names to be used for prediction when newdata is provided.}

\item{tau}{(Optional) A time point for truncating the survival time. If provided, the function evaluates predictions up to this time point.}

\item{new_data}{(Optional) A new dataset for evaluating the model. If NULL, the function uses the training data stored in model.}

\item{predict}{(Optional) A logical value indicating whether to return individual predictions. Default is FALSE.}
}
\value{
A list containing three components:
- R.squared: The R-squared measure, quantifying the explained variability in the response.
- L.squared: The L-squared measure, quantifying the reduction in prediction error.
- Psuedo.R: A pseudo R-squared measure, calculated as the product of R-squared and L-squared.
}
\description{
This function computes Calculates a set of measures, $R^2$ and $L^2$, $Pseudo-R^2$ for evaluating the predictive accuracy of parametric survival regression models. 
R-squared quantifies the proportion of variability in the response that is explained by a corrected prediction function derived from the original model. L-squared measures the proportion of the prediction error from the original model that is explained by the corrected prediction function, effectively capturing the improvement in prediction accuracy. Together, these metrics provide a comprehensive assessment of the predictive performance of a survival regression model.
}
\examples{
rm(list = ls())
library(survival)
library(TimeMetric)
library(tidyverse)
set.seed(2025)
data(pbc, package = "survival")
df <- pbc \%>\% 
 filter(is.na(trt)==F) \%>\% 
 mutate(log_albumin = log(albumin),
        log_bili = log(bili),
        log_protime = log(protime),
        status = ifelse(status==2, 1, 0)) \%>\% 
 select(time, status, age, log_albumin, log_bili, log_protime, edema)
train_data_idx <- sample(1:dim(df)[1], round(2/3*dim(df)[1]))
train_data <- df[train_data_idx, ]
test_data <- df[-train_data_idx, ]
m.cox<- coxph(Surv(time, status) ~ .,
                       data = train_data, x = TRUE, y = TRUE)
m.wei <- survreg(Surv(time, status) ~ ., #scale = 0.1,
                  data = train_data, dist="weibull", x=TRUE, y=TRUE)
m.wei.fix <- survreg(Surv(time, status) ~ .,  scale = 5,
                  data = train_data, dist="weibull", x=TRUE, y=TRUE)
## predict prob
covs <- names(df)[-c(1:2)]
wei_pred <- pam.surverg_restricted(model = m.wei,
                                  covs = covs, 
                                  new_data = test_data) 

}
