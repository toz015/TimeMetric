% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pam.predict_cr.R
\name{pam.predict_cr}
\alias{pam.predict_cr}
\title{Predict Subject-Specific Cumulative Incidence Function (CIF)}
\usage{
pam.predict_cr(
  model1 = NULL,
  model2 = NULL,
  fg_model = NULL,
  cr_model = NULL,
  tau = NULL,
  newdata,
  event.type = 1,
  covs
)
}
\arguments{
\item{model1}{The fitted model for the target cause (either a `coxph` or `survreg` object).}

\item{model2}{The fitted model for competing causes (either a `coxph` or `survreg` object).}

\item{fg_model}{Optional Fine-Gray model object (`crr` from `cmprsk` package).}

\item{cr_model}{Optional competing risks random forest model object.}

\item{newdata}{A data frame containing observed event times (`time`), event indicators (`status`).}

\item{event.type}{The event type of interest for which CIF is to be predicted (required for random forest model object).}

\item{covs}{A character vector specifying the names of the covariates used in the model.}
}
\value{
A list with two components:
\describe{
  \item{times}{umeric vector of observed times from \code{newdata$time}.}
  \item{status}{Integer vector of event indicators from \code{newdata$status}.}
  \item{cif_pred}{A matrix where the first column is time, and subsequent columns are predicted CIFs for each subject.}
  \item{pred}{Numeric vector of the integral of CIF from \code{0} to \code{tau}.}
  \item{linear.pred}{Numeric vector of subject-specific linear predictors.}
}
}
\description{
This function calculates cumulative incidence function (CIF) predictions for individual subjects 
across multiple types of competing risks models. It supports cause-specific Cox models, 
accelerated failure time (AFT) models (Weibull, Log-normal, Log-logistic), Fine-Gray models, 
and competing risks random survival forests.
}
\examples{
library(cmprsk)
library(tidyverse)
set.seed(2025)
data(pbc, package = "survival")
df <- pbc \%>\% 
 filter(is.na(trt)==F) \%>\% 
 mutate(log_albumin = log(albumin),
        log_bili = log(bili),
        log_protime = log(protime)) \%>\% 
 select(time, status, age, log_albumin, log_bili, log_protime, edema)
train_data_idx <- sample(1:dim(df)[1], round(2/3*dim(df)[1]))
train_data <- df[train_data_idx, ]
test_data <- df[-train_data_idx, ]
covariates <- names(df)[-c(1:2)]
fg_model <- crr(train_data$time, train_data$status, 
               train_data[, covariates, drop = FALSE], failcode = 2)
                     data = train_data, x = T, dist="weibull")
pred_FineGray <- pam.predict_cr(fg_model = fg_model,
                                            newdata = test_data,
                                            covariates = covariates)

}
